[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.author | replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
{% if cookiecutter.project_url -%}
homepage = "{{ cookiecutter.project_url }}"
{% endif -%}
readme = "README.md"

classifiers=[
    {% if cookiecutter.license == 'MIT license' -%}
    "License :: OSI Approved :: MIT License",
    {% elif cookiecutter.license == 'BSD license' -%}
    "License :: OSI Approved :: BSD License",
    {% elif cookiecutter.license == 'Apache Software License 2.0' -%}
    "License :: OSI Approved :: Apache Software License",
    {% endif -%}
    "Programming Language :: Python :: 3"
]

{% if cookiecutter.with_cli -%}
[tool.poetry.scripts]
{{ cookiecutter.project_slug | replace('_', '-') }} = '{{ cookiecutter.project_slug }}.__main__:run'
{%- endif %}

[tool.poetry.dependencies]
python = ">=3.10,<4"
python-dotenv = "^1.0.0"
pydantic = "^1"
{%- if cookiecutter.with_cli %}
click = "^8.1.3"
{%- if cookiecutter.with_cli_history %}
psutil = "^5.9.7"
{%- endif %}
{%- endif %}


[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.11"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-datadir-ng = "^1.1.1"


{%- if cookiecutter.with_docs %}
[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"
{%- endif %}


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
  "UP",  # pyupgrade
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
]
ignore = ["UP007", "UP038"]


[tool.coverage.run]
omit = [
    "tests/*",
]
source = [
    "src/{{ cookiecutter.project_slug }}",
]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
